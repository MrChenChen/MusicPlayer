<Window x:Class="MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" 
        xmlns:local="clr-namespace:MyMusicWPF"
        mc:Ignorable="d"
        x:Name="MainWindow"
        Title="我的音乐播放器"  MinHeight="510" MinWidth="725" Height="510" Width="725" SnapsToDevicePixels="True"  
        ResizeMode="CanResizeWithGrip"  WindowStartupLocation="CenterScreen" Icon="mymusic.ico" WindowState="Minimized"  >

    <Window.Resources>

        <Style x:Key="ListItemToolTipTextTitleBlock" TargetType="{x:Type TextBlock}" >
            <Setter Property="Effect" >
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="0"  BlurRadius="10" />
                </Setter.Value>
            </Setter>
            <Setter Property="TextTrimming" Value="WordEllipsis"  />
        </Style>

        <Style x:Key="ListItemToolTipTextBlock" TargetType="{x:Type TextBlock}" >
            <Setter Property="Effect" >
                <Setter.Value>
                    <DropShadowEffect  Opacity="1"/>
                </Setter.Value>
            </Setter>
            <Setter Property="TextTrimming" Value="WordEllipsis"  />

        </Style>

        <Style x:Key="MainSongInfoGrid1" TargetType="{x:Type TextBlock}" >
            <Setter Property="Effect" >
                <Setter.Value>
                    <DropShadowEffect  Opacity="0.5" ShadowDepth="1"/>
                </Setter.Value>
            </Setter>
            <Setter Property="TextTrimming" Value="WordEllipsis"  />
            <Setter Property="TextAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style x:Key="MainSongInfoGrid2" TargetType="{x:Type TextBlock}" >
            <Setter Property="Effect" >
                <Setter.Value>
                    <DropShadowEffect  Opacity="0.5" ShadowDepth="1"/>
                </Setter.Value>
            </Setter>
            <Setter Property="TextTrimming" Value="WordEllipsis"  />
            <Setter Property="TextAlignment" Value="Left"  />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        

        <ControlTemplate x:Key="btn_min" TargetType="{x:Type Button}" >
            <Grid>
                <Border x:Name="border0" Background="{DynamicResource MainColorBrush}" Opacity="0"/>
                <Border x:Name="btn_min" Width="35" Background="Transparent"   >
                    <Rectangle Height="2" Width="13" Margin="8,22,8,6" Fill="#FF575757"   />
                </Border>
            </Grid>
            <ControlTemplate.Triggers >

                <Trigger Property="IsMouseOver" Value="True" >
                    <Trigger.EnterActions>
                        <BeginStoryboard >
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="border0" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard >
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="border0" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource MainColorBrush}" TargetName="btn_min" />
                    <Setter Property="Opacity" Value="0.5" TargetName="btn_min" />
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>

        <DropShadowEffect x:Key="closeeffect" Color="{DynamicResource MainColor}" ShadowDepth="0" BlurRadius="5" Opacity="1" />

        <ControlTemplate x:Key="btn_settingControlTemplate" TargetType="{x:Type ToggleButton}" >
            <Grid Effect="{StaticResource closeeffect}">
                <Border x:Name="border0" Background="{DynamicResource MainColorBrush}" Opacity="0" />
                <Border x:Name="border1" Background="{DynamicResource MainColorBrush}" Opacity="0" />
                <Border Width="30"  Background="Transparent"  x:Name="border_setting">
                    <Grid Margin="0" >
                        <Line X1="7" Y1="12"    X2="23" Y2="12"  StrokeThickness="2" Stroke="#575757" />
                        <Line X1="7" Y1="17.5"  X2="23" Y2="17.5" StrokeThickness="2" Stroke="#575757" />
                        <Line X1="7" Y1="23"    X2="23" Y2="23"     StrokeThickness="2" Stroke="#575757" />
                    </Grid>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard >
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="border1" Storyboard.TargetProperty="Opacity" From="0" To="0.7" Duration="0:0:0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard >
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="border1" Storyboard.TargetProperty="Opacity" From="0.7" To="0" Duration="0:0:0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard >
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="border0" Storyboard.TargetProperty="Opacity" From="0.7" To="1" Duration="0:0:0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard >
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="border0" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="VolFlashProgressStyle" TargetType="{x:Type ProgressBar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid >
                            <!-- This Border is the track. It must be named PART_Track -->
                            <Border x:Name="PART_Track" Background="Transparent" CornerRadius="3"/>
                            <!-- This Border shows progress. It must be named PART_Indicator for the control to function -->
                            <Border x:Name="PART_Indicator" Background="{DynamicResource MainColorBrush}" Opacity="0.7" HorizontalAlignment="Left"   CornerRadius="3"  />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TitleProgressStyle" TargetType="{x:Type ProgressBar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid Opacity="0.5">
                            <!-- This Border is the track. It must be named PART_Track -->
                            <Border x:Name="PART_Track" Background="Transparent" />
                            <!-- This Border shows progress. It must be named PART_Indicator for the control to function -->
                            <Border x:Name="PART_Indicator" Background="{DynamicResource MainColorBrush}" Opacity="0.4" HorizontalAlignment="Left"     />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="btn_max" TargetType="{x:Type Button}" >
            <Grid>

                <Border x:Name="border0" Background="{DynamicResource MainColorBrush}" Opacity="0"/>
                <Border x:Name="btn_max" Width="35" Background="Transparent" >
                    <Rectangle Height="13" Width="13" Margin="11,10,11,5" Stroke="#FF575757"  StrokeThickness="2" />
                </Border>
            </Grid>
            <ControlTemplate.Triggers >

                <Trigger Property="IsMouseOver" Value="True" >
                    <Trigger.EnterActions>
                        <BeginStoryboard >
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="border0" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard >
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="border0" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>

                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource MainColorBrush}" TargetName="btn_max" />
                    <Setter Property="Opacity" Value="0.5" TargetName="btn_max" />
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="btn_close" TargetType="{x:Type Button}" >

            <Border x:Name="btn_close" Width="35" Background="Transparent"   >
                <Grid>
                    <Line X1="12" Y1="11" X2="24" Y2="23"  Stroke="#FF575757" StrokeThickness="2" />
                    <Line X1="24" Y1="11" X2="12" Y2="23"  Stroke="#FF575757" StrokeThickness="2" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers >

                <Trigger Property="IsMouseOver" Value="True"  SourceName="btn_close">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.Color" Storyboard.TargetName="btn_close" To="#e04343" Duration="0:0:0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.Color" Storyboard.TargetName="btn_close" From="#e04343" Duration="0:0:0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                    <!--<Setter Property="Background" Value="#e04343" TargetName="btn_close" />-->
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#c75050" TargetName="btn_close" />
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="SearchTextBoxControlTemplate">
            <Grid >
                <Border Name="border1" Opacity="0.4" Background="Transparent" CornerRadius="1"  BorderBrush="{DynamicResource MainColorBrush }" BorderThickness="0" ClipToBounds="True" >
                    <Line Name="underline" VerticalAlignment="Bottom" X1="4" X2="200" Stroke="{DynamicResource MainColorBrush }"/>
                </Border>

                <Grid  >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="22"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="22"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" Name="searchpath" Width="22" Opacity="0.5"   >
                        <Ellipse Name="Ellipse"  HorizontalAlignment="Stretch" Stroke="{DynamicResource MainColorBrush }" Height="12" Margin="3,3,7,0" VerticalAlignment="Top" Width="Auto"/>
                        <Line Name="Line" Stroke="{DynamicResource MainColorBrush }" X1="13" Y1="13" X2="18" Y2="18" />
                    </Grid>
                    <ScrollViewer   Margin="2,0,2,0" x:Name="PART_ContentHost"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1"/>
                    <Grid HorizontalAlignment="Right" Width="22" Grid.Column="2">
                        <Border Width="12" Height="12" Margin="3,6,1,4" >
                            <Grid Name="searchtextboxclosebutton"   Opacity="0"  Background="Transparent" MouseLeftButtonUp="searchtextboxclosebutton_MouseLeftButtonUp">
                                <Line Name="line1" X2="10" Y2="10" StrokeThickness="1" Stroke="{DynamicResource MainColorBrush}" />
                                <Line Name="line2" X1="10" Y2="10" Stroke="{DynamicResource MainColorBrush}" />
                            </Grid>
                        </Border>
                    </Grid>
                </Grid>

            </Grid>

            <ControlTemplate.Triggers>

                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="Ellipse" Property="StrokeThickness" Value="2"/>
                    <Setter TargetName="Line" Property="StrokeThickness" Value="2"/>
                    <Setter TargetName="Line" Property="Opacity" Value="1"/>
                    <Setter TargetName="underline" Property="Opacity" Value="1"/>
                    <Setter TargetName="border1" Property="Opacity" Value="0.7" />
                    <Setter TargetName="searchtextboxclosebutton" Property="Opacity" Value="0.7"/>
                    <Setter TargetName="line1" Property="StrokeThickness" Value="2"></Setter>
                    <Setter TargetName="line2" Property="StrokeThickness" Value="2"></Setter>
                </Trigger>
                <Trigger Property="IsFocused" Value="true">
                    <!--<Setter TargetName="border0" Property="DropShadowEffect.Opacity" Value="1"/>-->
                    <Setter TargetName="border1" Property="Opacity" Value="1"/>
                    <Setter TargetName="searchpath" Property="Opacity" Value="1"/>
                    <Setter TargetName="searchtextboxclosebutton" Property="Opacity" Value="1"/>
                    <!--<Setter TargetName="searchpopup" Property="IsOpen" Value="true"/>-->
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Simple Separator - This template is used for a Separator in a menu -->
        <Style x:Key="SimpleSeparator" TargetType="{x:Type Separator}">
            <Setter Property="Height" Value="6"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator" >
                        <Border Height="6">
                            <Grid Margin="4,2,4,2">
                                <Border BorderBrush="{DynamicResource MainColorBrush }" Opacity="0.5" BorderThickness="1" Background="{DynamicResource MainColorBrush }"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style   TargetType="{x:Type ContextMenu}"  >

            <Setter  Property="Template"  >
                <Setter.Value >
                    <ControlTemplate>
                        <Border >
                            <Grid Margin="5" Background="Transparent">
                                <Border Background="White"  BorderBrush="{DynamicResource MainColorBrush }" BorderThickness="1">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="10" Color="{DynamicResource MainColor }" ShadowDepth="0"/>
                                    </Border.Effect>
                                </Border>
                                <Border Background="White" Margin="4">
                                    <StackPanel >
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsOpen" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard >
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
            </Style.Triggers>

        </Style>

        

        <Style x:Key="playbtn" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Width" Value="25" />
            <Setter Property="Height" Value="25" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="IsTabStop"  Value="False" />
            <Setter Property="IsThreeState" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}"  >
                        <Grid Margin="0"  Width="{TemplateBinding Width}" Background="Transparent" Height="{TemplateBinding Height}" >

                            <Path x:Name="play" Margin="6,3,0,3" Fill="Transparent" Opacity="1" Stretch="Uniform" Stroke="{DynamicResource MainColorBrush}" StrokeThickness="2"   HorizontalAlignment="Stretch" VerticalAlignment="Stretch" d:LayoutOverrides="Width, Height"  >
                                <Path.Data>
                                    <GeometryGroup >
                                        <PathGeometry Figures="M -30,-60 V 60 L 60,0 z"  />
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                            <Path x:Name="next" Margin="6,3,0,3" Fill="Transparent" Opacity="0"  Stretch="Uniform" Stroke="{DynamicResource MainColorBrush}" StrokeThickness="2"   HorizontalAlignment="Center" VerticalAlignment="Center"  d:IsHidden="True">
                                <Path.Data>
                                    <GeometryGroup  >
                                        <GeometryGroup>
                                            <RectangleGeometry Rect="-40,-60,20,120"/>
                                            <RectangleGeometry Rect="20,-60,20,120"/>
                                        </GeometryGroup>
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="play" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.3" />
                                            <DoubleAnimation Storyboard.TargetName="next" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>

                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="next" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.3" />
                                            <DoubleAnimation Storyboard.TargetName="play" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>

                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="true" >
                                <Setter Property="Fill"   TargetName="play"  Value="{DynamicResource MainColorBrush}" />
                                <Setter Property="Fill"   TargetName="next"  Value="{DynamicResource MainColorBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="playbtnBottom" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Width" Value="35" />
            <Setter Property="Height" Value="35" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="IsTabStop"  Value="False" />
            <Setter Property="IsThreeState" Value="False" />
            <Setter Property="Opacity" Value="0.5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}"  >
                        <Grid Margin="0"  Width="{TemplateBinding Width}" Background="Transparent" Height="{TemplateBinding Height}" >
                            <Path x:Name="play" Margin="6,8,2,7" Fill="Transparent" Opacity="1" Stretch="Uniform" Stroke="{DynamicResource MainColorBrush}" StrokeThickness="2"   HorizontalAlignment="Stretch" VerticalAlignment="Stretch" d:LayoutOverrides="Width, Height"  >
                                <Path.Data>
                                    <GeometryGroup >
                                        <PathGeometry Figures="M -30,-60 V 60 L 60,0 z"  />
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                            <Path x:Name="next" Margin="8,8,8,8" Fill="Transparent" Opacity="0"  Stretch="Uniform" Stroke="{DynamicResource MainColorBrush}" StrokeThickness="2"   HorizontalAlignment="Center" VerticalAlignment="Center" d:IsHidden="True" >
                                <Path.Data>
                                    <GeometryGroup  >
                                        <GeometryGroup>
                                            <RectangleGeometry Rect="-40,-60,20,120"/>
                                            <RectangleGeometry Rect="20,-60,20,120"/>
                                        </GeometryGroup>
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="play" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5" />
                                            <DoubleAnimation Storyboard.TargetName="next" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>

                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="next" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5" />
                                            <DoubleAnimation Storyboard.TargetName="play" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>

                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="true" >
                                <Setter Property="Fill"   TargetName="play"  Value="{DynamicResource MainColorBrush}" />
                                <Setter Property="Fill"   TargetName="next"  Value="{DynamicResource MainColorBrush}" />
                                <Setter Property="Opacity" Value="1"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="nextbtn" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="25" />
            <Setter Property="Height" Value="25" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="IsTabStop"  Value="False" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template" >

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}"  >
                        <Grid Margin="0"  Width="{TemplateBinding Width}" Background="Transparent"  Height="{TemplateBinding Height}" >

                            <Path x:Name="next" Margin="0,5,0,5" Fill="Transparent" Opacity="1" Stretch="Uniform" Stroke="{DynamicResource MainColorBrush}" StrokeThickness="2"   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"    >
                                <Path.Data>
                                    <GeometryGroup >
                                        <GeometryGroup.Transform>
                                            <ScaleTransform  ScaleX="0.7" ScaleY="0.5"/>
                                        </GeometryGroup.Transform>
                                        <PathGeometry Figures="M -30,-60 V 60 L 20,0 z"  >
                                            <PathGeometry.Transform>
                                                <TranslateTransform X="60" />
                                            </PathGeometry.Transform>
                                        </PathGeometry>
                                        <PathGeometry Figures="M -30,-60 V 60 L 20,0 z"  />
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true" >
                                <Setter Property="Fill"   TargetName="next"  Value="{DynamicResource MainColorBrush}" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="searchbtn" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Width" Value="25" />
            <Setter Property="Height" Value="25" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="IsTabStop"  Value="False" />
            <Setter Property="IsThreeState" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}"  >
                        <Grid Name="searchmaingrid" Background="Transparent">
                            <Grid.Effect>
                                <DropShadowEffect  Color="{DynamicResource MainColor}" ShadowDepth="0" BlurRadius="5" Opacity="1" />
                            </Grid.Effect>
                            <Border x:Name="border0" Background="{DynamicResource MainColorBrush}" Opacity="0" />
                            <Border x:Name="border1" Background="{DynamicResource MainColorBrush}" Opacity="0" />
                            <Grid  Margin="1.25,3.748,4.749,3.248"  Width="{TemplateBinding Width}" Background="Transparent" Height="{TemplateBinding Height}" >


                                <Path Name="path1"  Margin="6.171,5.333,6.829,5.667" Fill="Transparent" Opacity="1" Stretch="Uniform" Stroke="#575757" StrokeThickness="2"   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  >
                                    <Path.Data>
                                        <EllipseGeometry  RadiusY="10"  RadiusX="10" />
                                    </Path.Data>
                                </Path>
                                <Path Name="path2" StrokeThickness="2" Stroke="#575757" Margin="0,14.493,3.326,0.668" Stretch="Fill" HorizontalAlignment="Right" Width="7.004" >
                                    <Path.Data>
                                        <LineGeometry StartPoint="10,13" EndPoint="15,24"   />
                                    </Path.Data>
                                </Path>
                            </Grid>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard >
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border0" Storyboard.TargetProperty="Opacity" From="0.7" To="1" Duration="0:0:0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard >
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border0" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard >
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border1" Storyboard.TargetProperty="Opacity" From="0" To="0.7" Duration="0:0:0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard >
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border1" Storyboard.TargetProperty="Opacity" From="0.7" To="0" Duration="0:0:0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VolBtnControlTemplate">
            <Grid>

                <Grid Name="volgrid" Background="Transparent"  >

                    <Grid.Effect >
                        <DropShadowEffect   Color="{DynamicResource MainColor}" ShadowDepth="0" BlurRadius="5" Opacity="1" />
                    </Grid.Effect>
                    <Border x:Name="border0" Background="{DynamicResource MainColorBrush}" Opacity="0" />
                    <Border x:Name="border1" Background="{DynamicResource MainColorBrush}" Opacity="0" />
                    <Border>
                        <Grid Margin="0">

                            <Path StrokeThickness="2" Stroke="#FF575757" Data="M5,8 L5,20 11,24 11,4 z" HorizontalAlignment="Left" Margin="5.163,10.084,0,4.916" Stretch="Fill" Width="8.125"/>

                            <Path Visibility="{Binding ElementName=MusicPlayer, Path=Volume, Converter={StaticResource volpathopactiy33Converter}, Mode=OneWay }" Data="M14,11 L14,22" HorizontalAlignment="Right" Margin="0,13.25,11.543,7.75" Stretch="Fill" Stroke="#FF575757" StrokeThickness="2" Width="2"  />

                            <Path Visibility="{Binding ElementName=MusicPlayer, Path=Volume, Converter={StaticResource volpathopactiy33Converter}, Mode=OneWay }"   Data="M17,9 L17,24" HorizontalAlignment="Right" Margin="0,10.084,6.502,4.916" Stretch="Fill" Stroke="#FF575757" StrokeThickness="2" Width="2"/>

                            <!--<Path Visibility="{Binding ElementName=MusicPlayer, Path=Volume, Converter={StaticResource volpathopactiy99Converter}, Mode=OneWay }" Data="M20,7 L20,26" HorizontalAlignment="Right" Margin="0,8,6.084,4" Stretch="Fill" Stroke="#FF575757" StrokeThickness="2" Width="2"/>-->

                            <Grid Visibility="{Binding ElementName=MusicPlayer, Path=Volume, Converter={StaticResource volpathVisibility0Converter }, Mode=OneWay }" Margin="0">

                                <Path Data="M28,1.9996667 L17.666667,12.333" HorizontalAlignment="Stretch" Margin="14.004,9.835,3.996,4.831" Stretch="Fill" Stroke="#FF575757" StrokeThickness="2" Width="Auto"/>
                                <Path Data="M28,1.9996667 L17.666667,12.333" HorizontalAlignment="Stretch" Margin="14.004,9.835,3.996,4.831" Stretch="Fill" Stroke="#FF575757" StrokeThickness="2" Width="Auto" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="1" ScaleX="-1"/>
                                            <SkewTransform AngleY="0" AngleX="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>

                            </Grid>

                        </Grid>
                    </Border>
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard >
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="border1" Storyboard.TargetProperty="Opacity" From="0" To="0.7" Duration="0:0:0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard >
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="border1" Storyboard.TargetProperty="Opacity" From="0.7" To="0" Duration="0:0:0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard >
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="border0" Storyboard.TargetProperty="Opacity" From="0.7" To="1" Duration="0:0:0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard >
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="border0" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Simple ListBoxItem - This is used for each Item in a ListBox. The item's content is placed in the ContentPresenter -->
        <Style TargetType="{x:Type ListBoxItem}">

            <Setter Property="IsTabStop" Value="False"  />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid x:Name="Grid" ToolTipService.ShowDuration="100000" ToolTipOpening="Grid_ToolTipOpening" ToolTipService.Placement="Left" ToolTipService.PlacementTarget="{Binding ElementName=Grid}"  Background="Transparent" Margin="2,1"  MouseLeftButtonDown="ListBoxItem_MouseLeftButtonDown"  >

                            <Grid.ToolTip >
                                <ToolTip>
                                    <ToolTip.Style >
                                        <Style TargetType="{x:Type ToolTip}" >
                                            <Setter Property="Template"  >
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToolTip}" >
                                                        <Grid  Width="300" Height="300"  >
                                                            <Border Background="{DynamicResource ResourceKey=MainColorBrush}" Opacity="0.6" >
                                                                <Border.Effect>
                                                                    <BlurEffect Radius="15" />
                                                                </Border.Effect>
                                                            </Border>
                                                            <Border BorderThickness="1" BorderBrush="{DynamicResource ResourceKey=MainColorBrush}" Margin="0"  >
                                                                <Border.Effect>
                                                                    <DropShadowEffect ShadowDepth="0" Color="{DynamicResource ResourceKey=MainColor }" BlurRadius="10" />
                                                                </Border.Effect>
                                                            </Border>

                                                            <ContentPresenter Height="auto" Width="auto" Margin="5" Content="{TemplateBinding Content}" />
                                                        </Grid>

                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToolTip.Style>
                                    <Grid>
                                        <Image  Source="{Binding MusicImage}"  Stretch="UniformToFill"   MaxWidth="300" MaxHeight="300" Opacity="0.5" >
                                            <Image.BitmapEffect>
                                                <BlurBitmapEffect Radius="0"  />
                                            </Image.BitmapEffect>
                                        </Image>
                                        <Grid Margin="5" MinWidth="200" MinHeight="200">

                                            <Grid x:Name="MusicDetailTooltip" TextBlock.Foreground="White" TextBlock.FontSize="13" >

                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="2.5*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="2*" />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition Height="2*"/>
                                                </Grid.RowDefinitions>
                                                <TextBlock Text="{Binding MusicTitle}" FontWeight="Bold" TextWrapping="WrapWithOverflow"  Margin="3,5" FontSize="17" TextAlignment="Center"   HorizontalAlignment="Center" VerticalAlignment="Center"  Grid.ColumnSpan="2"  Style="{StaticResource ListItemToolTipTextTitleBlock}"/>
                                                <TextBlock Text="歌手：" Grid.Row="1" Margin="3,5" TextAlignment="Right" Style="{StaticResource ListItemToolTipTextBlock}"/>
                                                <TextBlock Text="{Binding MusicAuthors}" Margin="3,5" Grid.Row="1" Grid.Column ="1" TextAlignment="Left" Style="{StaticResource ListItemToolTipTextBlock}" />
                                                <TextBlock Text="时长：" Grid.Row="2" Margin="3,5" TextAlignment="Right" Style="{StaticResource ListItemToolTipTextBlock}"/>
                                                <TextBlock Text="{Binding MusicLength}" Margin="3,5" Grid.Row="2" Grid.Column ="1" TextAlignment="Left"  Style="{StaticResource ListItemToolTipTextBlock}"/>
                                                <TextBlock Text="专辑：" Grid.Row="3" Margin="3,5" TextAlignment="Right" Style="{StaticResource ListItemToolTipTextBlock}"/>
                                                <TextBlock Text="{Binding MusicAlbum}" Margin="3,5" Grid.Row="3" Grid.Column ="1" TextAlignment="Left"  Style="{StaticResource ListItemToolTipTextBlock}"/>
                                                <TextBlock Text="年代：" Grid.Row="4" Margin="3,5" TextAlignment="Right" Style="{StaticResource ListItemToolTipTextBlock}"/>
                                                <TextBlock Text="{Binding MusicYear}" Margin="3,5" Grid.Row="4" Grid.Column ="1" TextAlignment="Left"  Style="{StaticResource ListItemToolTipTextBlock}"/>
                                                <TextBlock Text="风格：" Grid.Row="5" Margin="3,5" TextAlignment="Right" Style="{StaticResource ListItemToolTipTextBlock}"/>
                                                <TextBlock Text="{Binding MusicGenre}" Margin="3,5" Grid.Row="5" Grid.Column ="1" TextAlignment="Left"  Style="{StaticResource ListItemToolTipTextBlock}"/>
                                                <TextBlock Text="比特率：" Grid.Row="6" Margin="3,5" TextAlignment="Right" Style="{StaticResource ListItemToolTipTextBlock}"/>
                                                <TextBlock Text="{Binding MusicBitrate}" Margin="3,5" Grid.Row="6" Grid.Column ="1" TextAlignment="Left"  Style="{StaticResource ListItemToolTipTextBlock}"/>
                                                <TextBlock Text="文件大小：" Margin="3,5" Grid.Row="7" TextAlignment="Right" Style="{StaticResource ListItemToolTipTextBlock}"/>
                                                <TextBlock Text="{Binding MusicSize}" Margin="3,5" Grid.Row="7"  Grid.Column ="1" TextAlignment="Left"  Style="{StaticResource ListItemToolTipTextBlock}"/>
                                                <TextBlock Text="文件位置：" Grid.Row="8" TextAlignment="Right" Margin="3,5" Style="{StaticResource ListItemToolTipTextBlock}"/>
                                                <TextBlock Text="{Binding MusicLoc}" Margin="3,5" Grid.Row="8" Grid.Column ="1" TextAlignment="Left" HorizontalAlignment="Left"  TextWrapping="Wrap" MaxWidth="250"  Style="{StaticResource ListItemToolTipTextBlock}"/>

                                            </Grid>

                                        </Grid>
                                    </Grid>
                                </ToolTip>
                            </Grid.ToolTip>

                            <Grid >
                                <Border x:Name="Border1" Opacity="0" MinHeight="26" BorderThickness="1" Background="{DynamicResource MainColorBrush}"   BorderBrush="Transparent"  CornerRadius="2" />
                            </Grid>
                            <ContentPresenter x:Name="item"  Margin="6,1,1,1"  TextElement.Foreground="{DynamicResource MainColorBrush}"  TextElement.FontSize="13"  VerticalAlignment="Center"   />

                        </Grid>
                        <ControlTemplate.Triggers>

                            <!-- Change IsSelected SelectedBackgroundBrush to set the selection color for the items -->
                            <Trigger Property="IsSelected" Value="true">
                                <!--<Setter Property="Background" Value="{DynamicResource MainColorBrush}" TargetName="Border2"/>-->
                                <Setter Property="TextElement.Foreground" Value="White" TargetName="item"/>
                                <Setter Property="Background" TargetName="Border1" Value="{DynamicResource MainColorBrush}"/>
                                <Setter Property="TextElement.FontSize" Value="14"/>
                                <Setter Property="TextElement.FontWeight" Value="Bold"/>
                                <Setter Property="Opacity" TargetName="Border1" Value="1"/>
                                <Setter Property="Background" TargetName="Grid" Value="{DynamicResource MainColorBrush}"/>
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="true" >
                                <!--<Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Border1" Storyboard.TargetProperty ="Opacity" From="0" To="0.6" Duration="0:0:0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Border1" Storyboard.TargetProperty ="Opacity" From="0.6" To="0" Duration="0:0:0.0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>-->

                                <Setter Property="Opacity"   TargetName="Border1" Value="0.6"/>
                                <!--<Setter Property="Opacity" TargetName="Border1" Value="0.6"/>-->
                                <Setter Property="TextElement.Foreground" Value="White" TargetName="item"/>
                                <Setter Property="TextElement.FontSize" Value="14"/>

                            </Trigger>


                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <!-- Simple ListBox - This uses SimpleScrollViewer to allow items to be scrolled and SimpleListBoxItem to define the look of each item -->
        <Style    TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd"  >
                            <Grid>
                                <Border BorderThickness="1" BorderBrush="{ DynamicResource MainColorBrush }" CornerRadius="3"  Padding="1">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="5" Color="{ DynamicResource MainColor }" ShadowDepth="0" />
                                    </Border.Effect>
                                </Border>

                                <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Margin="5,3">
                                    <ItemsPresenter Name="ListBoxItemContextMenu" >
                                        <ItemsPresenter.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Click="MenuItemPlay_Click" Header="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem,  Converter={StaticResource listboxitemcontextmenu } }" />
                                                <MenuItem Click="MenuItemFindLrc" Header="搜索歌词" ></MenuItem>
                                                <MenuItem Click="MenuItemMusicLocation_Click" Header="文件位置" />
                                                <MenuItem Click="MenuItemProperty_Click" Header="文件属性" />
                                                <MenuItem Click="MenuItemReloadList_Click" Header="重新加载"/>

                                                <Separator Style="{StaticResource SimpleSeparator }"/>
                                                <MenuItem  Header="列表排序" >
                                                    <MenuItem x:Name="MenuItemSort1" Header="按歌曲标题 升序"  PreviewMouseDown="MenuItem_SortClick1" IsCheckable="False" />
                                                    <MenuItem x:Name="MenuItemSort2" Header="按歌曲标题 降序"  PreviewMouseDown="MenuItem_SortClick2" IsCheckable="False"/>
                                                    <Separator  Style="{DynamicResource SimpleSeparator}"/>
                                                    <MenuItem x:Name="MenuItemSort3" Header="按歌手 升序" PreviewMouseDown="MenuItem_SortClick3" IsCheckable="False"  />
                                                    <MenuItem x:Name="MenuItemSort4" Header="按歌手 降序" PreviewMouseDown="MenuItem_SortClick4" IsCheckable="False"/>
                                                </MenuItem>
                                            </ContextMenu>
                                        </ItemsPresenter.ContextMenu>
                                    </ItemsPresenter>
                                </ScrollViewer>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>


    </Window.Resources>

    <Window.TaskbarItemInfo>
        <TaskbarItemInfo x:Name="taskbar"  Description="{ Binding ElementName=MainWindow, Path=Title}" ProgressState="Normal"  >

            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfo x:Name="TaskBarStopBtn"     ImageSource="Resources/stop.ico"  Description="停止" Click="TaskBarStopBtn_Click"/>
                <ThumbButtonInfo x:Name="TaskBarPreviousBtn" ImageSource="Resources/previous.ico"  Description="上一首" Click="TaskBarPreviousBtn_Click"/>
                <ThumbButtonInfo x:Name="TaskBarPlayBtn"     ImageSource="Resources/play.ico"  Description="开始播放" Click="MusicPlayButton_Click" />
                <ThumbButtonInfo x:Name="TaskBarNextBtn"     ImageSource="Resources/next.ico"  Description="下一首" Click="MusicnextButton_Click"/>
                <ThumbButtonInfo x:Name="TaskBarExitBtn"     ImageSource="Resources/x.ico"  Description="退出"   Click="CloseWindowCommand_Executed"/>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>

    <Window.CommandBindings>
        <CommandBinding Command="SystemCommands.MinimizeWindowCommand" Executed="MinimizeWindowCommand_Executed" />
        <CommandBinding Command="SystemCommands.MaximizeWindowCommand" Executed="MaximizeWindowCommand_Executed" />
        <CommandBinding Command="SystemCommands.CloseWindowCommand" Executed="CloseWindowCommand_Executed" />

    </Window.CommandBindings>

    <WindowChrome.WindowChrome >
        <WindowChrome CaptionHeight="30"  ResizeBorderThickness="5"  />
    </WindowChrome.WindowChrome>

    <Window.Template>
        <ControlTemplate TargetType="{x:Type Window}">
            <Border  Margin="0">
                <Border Name="MainBorder"   Opacity="1"  CornerRadius="0" BorderBrush="{DynamicResource ResourceKey=MainColorBrush}" BorderThickness="1"  Background="{TemplateBinding Background}"  >
                    <Border.Effect>
                        <DropShadowEffect x:Name="MainBorderEffect" Opacity="1" BlurRadius="10" ShadowDepth="0" Color="{DynamicResource ResourceKey=MainColor}"/>
                    </Border.Effect>
                    <AdornerDecorator   >
                        <Grid>
                            <!--背景图片-->

                            <Border  Opacity="{Binding Value, ElementName=Backgopacity}" Margin="0">
                                <Border.Effect>
                                    <BlurEffect  Radius="{Binding Value, ElementName=Backgeffect}"  />
                                </Border.Effect>

                                <Image Name="m_BackgroundImage" Stretch="UniformToFill" Source="Frozen.jpg" />
                            </Border>

                            <!-- 背景动画 -->


                            <!-- 主窗口控件布局 标题栏 设计-->
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <!-- 播放音乐时 随音乐 跳动  的进度条-->

                                <Grid  Name="TitleBar_Grid" Grid.Row="0"  Background="Transparent" WindowChrome.IsHitTestVisibleInChrome="True"  >

                                    <Grid.ColumnDefinitions >
                                        <ColumnDefinition  Width="30"/>
                                        <ColumnDefinition  Width="30"/>
                                        <ColumnDefinition  Width="30"/>
                                        <ColumnDefinition  Width="213*" />
                                        <ColumnDefinition  Width="auto" MinWidth="30" />
                                        <ColumnDefinition  Width="30"/>
                                        <ColumnDefinition  Width="135"/>

                                    </Grid.ColumnDefinitions>

                                    <ProgressBar x:Name="TitleProgress"  Value="{Binding ElementName=sliderProgress, Path=Value}" Maximum="{Binding ElementName=sliderProgress, Path=Maximum}"  Grid.Column="0" Grid.ColumnSpan="7" Height="30" VerticalAlignment="Top"  Style="{StaticResource TitleProgressStyle}"  />

                                    <ToggleButton x:Name="MusicPlayButton" Grid.Column="1"  Click="MusicPlayButton_Click"  IsChecked="{Binding ElementName=BottomPlayBtn, Path=IsChecked}"  ToolTip="{Binding ElementName=TaskBarPlayBtn, Path=Description, Mode=TwoWay }" Grid.RowSpan="1" Style="{StaticResource playbtn}"  Margin="1.166,2.5,3.833,2.5" />

                                    <Button x:Name="MusicnextButton" Click="MusicnextButton_Click"  Grid.Column="2" Style="{StaticResource nextbtn}" ToolTip="播放下一首" Margin="2.5"/>
                                    <!-- 标题栏 -->
                                    <Grid x:Name="TitleGrid" WindowChrome.IsHitTestVisibleInChrome="False"   Grid.Column="3" Grid.ColumnSpan="2"  Background="Transparent"  MouseDown="Title_Move" MouseLeftButtonDown="TitleGrid_MouseLeftButtonDown"   Margin="0"  >

                                        <TextBlock  Background="Transparent"    Foreground="{DynamicResource MainColorBrush }" Text="{Binding Title, ElementName=MainWindow}"   VerticalAlignment="Center"   FontSize="15"   TextTrimming="WordEllipsis" FontWeight="Bold"   Margin="3,1" Width="Auto" />

                                    </Grid>

                                    <ToggleButton  Name="volbtn" Template="{StaticResource VolBtnControlTemplate }" Grid.Column="5" IsTabStop="False" IsChecked="{ Binding ElementName=volbtnpopup, Path=IsOpen }"  MouseWheel="volbtn_MouseWheel"  ToolTipService.InitialShowDelay="100" ToolTip="{ Binding ElementName=voltxt,Path=Text,  Converter={StaticResource volbtntooltipConverter }}" />

                                    <!-- 音量  面板 popup -->
                                    <Popup Name="volbtnpopup"  Grid.Column="5" AllowsTransparency="True" Width="220" Height="220" StaysOpen="False" Placement="MousePoint" VerticalOffset="30" Grid.ColumnSpan="2" Margin="0,0,-15,-40">
                                        <Grid >

                                            <Border Background="{DynamicResource ResourceKey=MainColorBrush}" Opacity="0.6" >
                                                <Border.Effect>
                                                    <!--<DropShadowEffect ShadowDepth="0" Color="{DynamicResource ResourceKey=MainColor }" BlurRadius="10" />-->
                                                    <BlurEffect Radius="15" />
                                                </Border.Effect>
                                            </Border>
                                            <Border BorderThickness="1" BorderBrush="{DynamicResource ResourceKey=MainColorBrush}" Margin="0"  >
                                                <Border.Effect>
                                                    <!--<DropShadowEffect ShadowDepth="0" Color="{DynamicResource ResourceKey=MainColor }" BlurRadius="10" />-->
                                                    <DropShadowEffect ShadowDepth="0" BlurRadius="15" Color="{DynamicResource ResourceKey=MainColor}"/>
                                                </Border.Effect>
                                            </Border>
                                            <Border Margin="5" >
                                                <StackPanel>
                                                    <TextBlock Text="播放器音量：" Margin="5" MouseWheel="volbtn_MouseWheel"/>
                                                    <StackPanel Orientation="Horizontal" MouseWheel="volbtn_MouseWheel">
                                                        <Slider x:Name="volslider" Value="{Binding Volume , ElementName=MusicPlayer }"   Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" Minimum="0" Maximum="1" SmallChange="0.02" LargeChange="0.05"   Width="124"    />
                                                        <TextBlock x:Name="voltxt" MouseLeftButtonDown="voltxt_MouseLeftButtonDown" Text="{Binding Value, ElementName=volslider, Converter={StaticResource volto100Converter } }" TextAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                                                        <CheckBox Name="exevolchecked" VerticalAlignment="Center" Margin="5" ToolTipService.BetweenShowDelay="100" ToolTipService.ShowDuration="10000" Content="静音" IsChecked="{Binding IsMuted, ElementName=MusicPlayer}"   />
                                                    </StackPanel>


                                                    <TextBlock Text="系统音量：" Margin="5" MouseWheel="systemvol_MosueWheel"/>
                                                    <StackPanel Orientation="Horizontal" MouseWheel="systemvol_MosueWheel">
                                                        <Slider Name="systemvolslider" ValueChanged="systemvolslider_ValueChanged"  Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" Minimum="0" Maximum="1" SmallChange="0.02" LargeChange="0.05"   Width="124"   />
                                                        <TextBlock Text="{Binding Value, ElementName=systemvolslider, Converter={StaticResource volto100Converter } }" TextAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                                                        <CheckBox Name="sysvolchecked" VerticalAlignment="Center" Margin="5" ToolTipService.BetweenShowDelay="100" ToolTipService.ShowDuration="10000" Content="静音" Click="sysvol_Click"   />
                                                    </StackPanel>

                                                    <TextBlock Text="平衡：" Margin="5"/>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Slider Name="balance" Value="{Binding Balance  , ElementName=MusicPlayer, Mode=TwoWay}"   Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" Minimum="-1" Maximum="1" SmallChange="0.1" LargeChange="0.2"   Width="124"   />
                                                        <TextBlock Text="{Binding Value, ElementName=balance ,StringFormat={}{0:F1}}" TextAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                                                        <TextBlock Text="重置" TextAlignment="Center" VerticalAlignment="Center" Margin="5" TextDecorations="Underline" Cursor="Hand" MouseDown="Balance_MouseDown"/>
                                                    </StackPanel>

                                                    <TextBlock Text="速度：" Margin="5"/>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Slider Name="speed" Value="{Binding ElementName=MusicPlayer, Path=SpeedRatio,  Mode=TwoWay}"   Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" Minimum="0" Maximum="5" SmallChange="1" LargeChange="3"   Width="124"   />
                                                        <TextBlock Text="{Binding Value, ElementName=speed ,StringFormat={}{0:F1}}" TextAlignment="Center" VerticalAlignment="Center" Margin="5"  />
                                                        <TextBlock Text="重置" TextAlignment="Center" VerticalAlignment="Center" Margin="5" TextDecorations="Underline" Cursor="Hand" MouseDown="Speed_MouseDown"/>
                                                    </StackPanel>
                                                </StackPanel>

                                            </Border>

                                        </Grid>
                                    </Popup>

                                    <StackPanel Grid.Column="6" Orientation="Horizontal"   >
                                        <StackPanel.Resources>
                                            <DropShadowEffect x:Key="closeeffect" Color="{DynamicResource MainColor}" ShadowDepth="0" BlurRadius="5" Opacity="1" />
                                        </StackPanel.Resources>

                                        <ToggleButton x:Name="btn_setting" Template="{StaticResource btn_settingControlTemplate}"  Focusable="False" IsChecked="{ Binding ElementName=popup_setting, Path=IsOpen }"  Width="30" Margin="0" Height="30" Content="设置"  HorizontalAlignment="Center"  VerticalAlignment="Center" Background="Transparent" Foreground="#FF575757" ToolTip="设置"    />

                                        <Button Width="35" Height="30" Template="{DynamicResource btn_min}"  Command="{x:Static SystemCommands.MinimizeWindowCommand}" Focusable="False" ToolTip="最小化"  Effect="{StaticResource closeeffect}"/>
                                        <Button Width="35" Command="{x:Static SystemCommands.MaximizeWindowCommand}" Template="{DynamicResource btn_max}" Focusable="False" ToolTip="最大化/还原"  Effect="{StaticResource closeeffect}"/>
                                        <Button Width="35" Command="{x:Static SystemCommands.CloseWindowCommand}" Template="{DynamicResource btn_close}" Focusable="False" ToolTip="关闭"  Effect="{StaticResource closeeffect}"/>
                                    </StackPanel>

                                    <!-- 左上角音乐图标-->
                                    <Grid Name="MusicIcon_Grid" Background="Transparent"  MouseDown="Title_Move" >
                                        <Grid.ContextMenu>
                                            <ContextMenu Name="MusicIconContextMenu"  FocusManager.IsFocusScope="True" >
                                                <MenuItem Name="TitleContextMenu_Play" Header="播放" Click="MusicContextMenu_Play_Click"  />
                                                <MenuItem Header="上一首" Click="TaskBarPreviousBtn_Click"  />
                                                <MenuItem Header="下一首" Click="MusicnextButton_Click"  />
                                                <MenuItem Header="随机播放" Click="RndPlayMusic_Click" />
                                                <Separator Style="{DynamicResource SimpleSeparator }"/>
                                                <MenuItem Header="显示歌词" Click="显示歌词_Click"  IsCheckable="True" IsChecked="True"   />
                                                <Separator Style="{DynamicResource SimpleSeparator }"/>
                                                <MenuItem Click="MenuItemReloadList_Click" Header="重新加载"/>
                                                <MenuItem Header="最小化" Click="MinimizeWindowCommand_Executed" />
                                                <MenuItem Header="最大化/还原" Click="MaximizeWindowCommand_Executed"/>
                                                <MenuItem Header="关闭" Click="CloseWindowCommand_Executed"  />

                                            </ContextMenu>
                                        </Grid.ContextMenu>
                                        <Border Margin="2.667,3.333,0,0" RenderTransformOrigin="0.5,0.5">
                                            <!-- 左上角音乐图标 -->
                                            <Path x:Name="pathmusic" Stretch="Fill" Fill="Transparent" StrokeThickness="2" Stroke="{DynamicResource MainColorBrush}" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Stretch" Width="Auto"  HorizontalAlignment="Stretch" Height="Auto" Margin="2.272,1.417,2.632,2.019" Data="M6.1963643,7.374972 L22.484045,6.0221839 C22.484045,11.438851 23.054175,20.463659 22.624829,23.250459 22.374401,24.875942 21.120204,27.001436 18.734752,27.125633 17.745014,26.970185 16.227252,26.721479 15.47721,25.096404 15.06052,23.304655 15.450989,20.970907 18.243048,20.970303 L17.813179,12.042091 11.5,12.500033 C11.555556,16.611166 12.249374,22.375229 11.666667,24.833432 11.249314,26.875293 9.7489174,28.375406 7.2487101,28.938023 5.8110908,29.187761 3.5015518,28.687272 2.9389708,27.125342 2.3764458,25.937233 2.5090418,22.052715 6.3807582,22.39092 6.5057198,19.827857 6.1963643,7.374972 6.1963643,7.374972 z"  >

                                            </Path>

                                        </Border>
                                    </Grid>

                                </Grid>

                                <ContentPresenter Grid.Row="1" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}"/>

                            </Grid>
                        </Grid>
                    </AdornerDecorator>

                </Border>
            </Border>


        </ControlTemplate>

    </Window.Template>

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup"/>
        </VisualStateManager.VisualStateGroups>

        <Grid x:Name="MainGrid" Background="Transparent" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="230*"/>
                <ColumnDefinition Width="489*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="60"/>
            </Grid.RowDefinitions>


            <Popup x:Name="popup_setting" StaysOpen="False" Style="{x:Null}" Placement="MousePoint" VerticalOffset="30" AllowsTransparency="True"  Grid.RowSpan="2" Grid.ColumnSpan="2" >
                <Grid >
                    <Border Background="{DynamicResource ResourceKey=MainColorBrush}" Opacity="0.6" >
                        <Border.Effect>
                            <!--<DropShadowEffect ShadowDepth="0" Color="{DynamicResource ResourceKey=MainColor }" BlurRadius="10" />-->
                            <BlurEffect Radius="15" />
                        </Border.Effect>
                    </Border>
                    <Border BorderThickness="1" BorderBrush="{DynamicResource ResourceKey=MainColorBrush}" Margin="0"  >
                        <Border.Effect>
                            <!--<DropShadowEffect ShadowDepth="0" Color="{DynamicResource ResourceKey=MainColor }" BlurRadius="10" />-->
                            <DropShadowEffect ShadowDepth="0" BlurRadius="15" Color="{DynamicResource ResourceKey=MainColor}"/>
                        </Border.Effect>
                    </Border>
                    <Border>
                        <Grid>
                            <StackPanel Orientation="Horizontal" >
                                <Grid HorizontalAlignment="Left"  Width="220">

                                    <StackPanel >
                                        <StackPanel  Orientation="Horizontal"  Margin="24,10,15,0" Height="30">
                                            <TextBlock Text="当前主题颜色：" VerticalAlignment="Center"  />
                                            <Rectangle x:Name="nowcolor_rect" Width="30" Fill="{DynamicResource MainColorBrush}" Stroke="White" StrokeThickness="2"  Height="30" Margin="20,0,0,0" />
                                        </StackPanel>
                                        <TextBlock Text="选择主题颜色：" Margin="24,5,15,5" VerticalAlignment="Center"   />

                                        <WrapPanel x:Name="Rect_Parent"  Margin="10,3" VerticalAlignment="Center" HorizontalAlignment="Center" >
                                            <WrapPanel.Resources >

                                                <Style TargetType="{x:Type Rectangle}">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <Setter Property="VerticalAlignment"   Value="Center" />
                                                    <Setter Property="StrokeThickness" Value="0"/>
                                                    <Setter Property="Stroke" Value="White"  />
                                                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>

                                                    <Setter Property="RenderTransform" >
                                                        <Setter.Value>
                                                            <RotateTransform />
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>

                                                        <EventTrigger RoutedEvent="UIElement.MouseDown" >
                                                            <BeginStoryboard >
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="StrokeThickness" AutoReverse="True"  To="5" Duration="0:0:0.5"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                        <EventTrigger RoutedEvent="UIElement.MouseEnter" >
                                                            <BeginStoryboard >
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle" AutoReverse="True" From="0" To="360" Duration="0:0:0.7"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </WrapPanel.Resources>
                                            <Rectangle Width="30" Fill="#FFA4C400"  Height="30" Margin="5" />
                                            <Rectangle Width="30" Fill="#FF60A917"  Height="30" Margin="5"/>
                                            <Rectangle Width="30" Fill="#FF008A00"  Height="30" Margin="5"/>
                                            <Rectangle Width="30" Fill="#FF00ABA9"  Height="30" Margin="5"/>
                                            <Rectangle Width="30" Fill="#FF1BA1E2"  Height="30" Margin="5"/>
                                            <Rectangle Width="30" Fill="#FF0050EF"  Height="30" Margin="5"/>
                                            <Rectangle Width="30" Fill="#FF6A00FF"  Height="30" Margin="5"/>
                                            <Rectangle Width="30" Fill="#FFAA00FF"  Height="30" Margin="5"/>
                                            <Rectangle Width="30" Fill="#FFF472D0"  Height="30" Margin="5"/>
                                            <Rectangle Width="30" Fill="#FFD80073"  Height="30" Margin="5"/>

                                            <Rectangle Width="30" Fill="#FFA20025"  Height="30" Margin="5"/>
                                            <Rectangle Width="30" Fill="#FFE51400"  Height="30" Margin="5"/>
                                            <Rectangle Width="30" Fill="#FFFA6800"  Height="30" Margin="5"/>
                                            <Rectangle Width="30" Fill="#FFF0A30A"  Height="30" Margin="5"/>
                                            <Rectangle Width="30" Fill="#FFE3C800"  Height="30" Margin="5"/>
                                            <Rectangle Width="30" Fill="#FF825A2C"  Height="30" Margin="5"/>
                                            <Rectangle Width="30" Fill="#FF6D8764"  Height="30" Margin="5"/>
                                            <Rectangle Width="30" Fill="#FF647687"  Height="30" Margin="5"/>
                                            <Rectangle Width="30" Fill="#FF76608A"  Height="30" Margin="5"/>
                                            <Rectangle Width="30" Fill="#FF87794E"  Height="30" Margin="5"/>
                                        </WrapPanel>
                                        <Border Height="120" Margin="20,5,20,5">
                                            <Grid    >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="19*"/>
                                                    <ColumnDefinition Width="71*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="30*"/>
                                                    <RowDefinition Height="30*"/>
                                                    <RowDefinition Height="30*"/>
                                                    <RowDefinition Height="30*"/>
                                                    <RowDefinition Height="30*"/>
                                                </Grid.RowDefinitions>
                                                <TextBlock Text="微调主题颜色 （R,G,B,A）：" Margin="0,5" Grid.RowSpan="1" Grid.ColumnSpan="2"/>

                                                <TextBlock   VerticalAlignment="Center" Text ="{Binding Value, ElementName=sliderR, StringFormat=R: \{0\}}"   Grid.Row="1" Height="15.24" Margin="0,4.38"  />
                                                <Slider x:Name="sliderR" VerticalAlignment="Center"   Maximum="255"  IsSnapToTickEnabled="True" Grid.Column="1" Grid.Row="1" AutoToolTipPlacement="TopLeft" LargeChange="10" Height="18" Margin="0,3"/>

                                                <TextBlock   VerticalAlignment="Center" Text ="{Binding Value, ElementName=sliderG, StringFormat=G: \{0:\}}"  Grid.Row="2" Height="15.24" Margin="0,4.38"   />
                                                <Slider x:Name="sliderG"  VerticalAlignment="Center"  Maximum="255" IsSnapToTickEnabled="True" Grid.Row="2" Grid.Column="1" AutoToolTipPlacement="TopLeft" LargeChange="10" Height="18" Margin="0,3"  />

                                                <TextBlock   VerticalAlignment="Center" Text ="{Binding Value, ElementName=sliderB, StringFormat=B: \{0:\}}"  Grid.Row="3" Height="15.24" Margin="0,4.38"  />
                                                <Slider x:Name="sliderB" VerticalAlignment="Center" Maximum="255" IsSnapToTickEnabled="True" Grid.Column="1" Grid.Row="3" AutoToolTipPlacement="TopLeft" LargeChange="10" Height="18" Margin="0,3"/>

                                                <TextBlock   VerticalAlignment="Center" Text ="{Binding Value, ElementName=sliderA, StringFormat=A: \{0:\}}"  Grid.Row="4" Height="15.24" Margin="0,4.38"  />
                                                <Slider x:Name="sliderA" VerticalAlignment="Center" Maximum="255" IsSnapToTickEnabled="True" Grid.Column="1" Grid.Row="4" AutoToolTipPlacement="TopLeft" LargeChange="10" Height="18" Margin="0,3"/>

                                            </Grid>
                                        </Border>

                                    </StackPanel>

                                </Grid>

                                <Grid Width="220" >
                                    <StackPanel Margin="5,10" >
                                        <Border Height="70" Margin="10,5">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="0.8*" />
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="37*"/>
                                                    <ColumnDefinition Width="163*"/>
                                                </Grid.ColumnDefinitions>

                                                <TextBlock Text="主程序窗口的长和宽" Grid.ColumnSpan="2" VerticalAlignment="Center" ToolTipService.ShowDuration="10000" />

                                                <TextBlock  VerticalAlignment="Center" Grid.Column="1" Margin="74,2.38,0,2.38" HorizontalAlignment="Left" Width="89" >
                                                    <TextBlock.Text>
                                                        <MultiBinding StringFormat="( {0:N0} x {1:N0} )：">
                                                            <Binding ElementName="SliderWidth" Path="Value" />
                                                            <Binding ElementName="SliderHeight" Path="Value" />
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>


                                                <TextBlock Text="长度:" Grid.Row="1" VerticalAlignment="Center"  />
                                                <TextBlock Text="宽度:" Grid.Row="2" VerticalAlignment="Center"  />
                                                <Slider x:Name="SliderWidth" Value="{Binding Width, ElementName=MainWindow}" SmallChange="1" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center"  AutoToolTipPlacement="TopLeft" IsSnapToTickEnabled="True" LargeChange="10"/>
                                                <Slider x:Name="SliderHeight" Grid.Column="1" Grid.Row="2" Value="{Binding Height, ElementName=MainWindow}" SmallChange="1" VerticalAlignment="Center"  AutoToolTipPlacement="TopLeft" LargeChange="10"/>
                                            </Grid>

                                        </Border>
                                        <Border Height="90" Margin="10,5">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="0.8*" />
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="28*"/>
                                                    <ColumnDefinition Width="67*"/>
                                                </Grid.ColumnDefinitions>

                                                <TextBlock Text="主程序窗口背景设置" TextDecorations="Underline"  Grid.ColumnSpan="2" VerticalAlignment="Center" Height="15.24" Margin="0,2.38,80.666,2.38" Cursor="Hand"  ToolTip="点击更换背景图片"   MouseDown="ChangeBackImg_MouseDown" />
                                                <TextBlock Text="重置" TextDecorations="Underline"  Grid.ColumnSpan="2" VerticalAlignment="Center" Height="15.24" Margin="162,2.38,0,2.38" Cursor="Hand"  ToolTip="点击更换背景图片"   MouseDown="ResetBackImage_MouseDown" />

                                                <TextBlock  x:Name="ChangeBackImg" Visibility="Hidden" VerticalAlignment="Center" Height="15.24" Margin="53.334,2.38,0,2.38" Grid.Column="1" >
                                                    <TextBlock.Text>
                                                        <MultiBinding StringFormat="( {0:F1} ; {1:F2} )：">
                                                            <Binding ElementName="Backgeffect" Path="Value" />
                                                            <Binding ElementName="Backgopacity" Path="Value" />
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>

                                                <TextBlock Text="高斯模糊:" Grid.Row="1" VerticalAlignment="Center" Height="15.24" Margin="0,4.88"  />
                                                <TextBlock Text="透明度:" Grid.Row="2" VerticalAlignment="Center" Height="15.24" Margin="0,4.88"  />
                                                <Slider x:Name="Backgeffect"  SmallChange="0.5" Grid.Column="1" Value="0" Grid.Row="1" VerticalAlignment="Center"  AutoToolTipPlacement="TopLeft" IsSnapToTickEnabled="True" Height="18" Margin="0,3.5" Maximum="30" LargeChange="10" AutoToolTipPrecision="1" TickFrequency="0.5"/>
                                                <Slider x:Name="Backgopacity" Grid.Column="1" Grid.Row="2"  VerticalAlignment="Center" Value="0.8" AutoToolTipPlacement="TopLeft" Height="18" Margin="0,3.5" Maximum="1" AutoToolTipPrecision="2"/>
                                                <TextBlock Name="MusicPathLabel" Text="音乐路径:" Grid.Row="3" ToolTip="点击更换音乐路径并重新加载" VerticalAlignment="Center" TextDecorations="Underline" Cursor="Hand" MouseDown="MusicPathLabel_MouseDown" ></TextBlock>
                                                <TextBlock Name="MusicPathTextBlock" Text="NULL" Grid.Column="1" Margin="2.88,0" Grid.Row="3" VerticalAlignment="Center" ToolTip="{Binding ElementName=MusicPathTextBlock,Path=Text}"></TextBlock>
                                            </Grid>

                                        </Border>
                                    </StackPanel>
                                </Grid>

                            </StackPanel>
                        </Grid>
                    </Border>
                </Grid>
            </Popup>

            <ListBox x:Name="mylistbox" Margin="7,33,15,17" Grid.Column="1" Grid.RowSpan="2"     />

            <Border Grid.Column="1" Width="111" Height="25"  VerticalAlignment="Top"  Background="Transparent"   HorizontalAlignment="Right" Margin="0,9,20,0"  >
                <Border.Effect >
                    <DropShadowEffect ShadowDepth="0" BlurRadius="2" />
                </Border.Effect>
                <Grid Margin="0,-7,0,7">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="31*"/>
                        <ColumnDefinition Width="10*"/>
                        <ColumnDefinition Width="31*"/>
                        <ColumnDefinition Width="8*"/>
                        <ColumnDefinition Width="31*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="playingitem" Grid.Column="0"  Text="0"  ToolTip="正在播放的项目"   VerticalAlignment="Bottom" TextAlignment="Right" Foreground="{DynamicResource MainColorBrush}" Margin="0,0,0,5" Height="16"/>
                    <TextBlock Text="/"  HorizontalAlignment="Right"     VerticalAlignment="Center" TextAlignment="Right" Foreground="{DynamicResource MainColorBrush}" Margin="0,4,0,5" Width="10" Grid.Column="1" Height="16"   />
                    <TextBlock x:Name="txtSelectedIndex" Grid.Column="2" Text="{Binding SelectedIndex, Converter={StaticResource valueplusoneConverter }, ElementName=mylistbox, TargetNullValue=0}"  VerticalAlignment="Bottom" TextAlignment="Right" Foreground="{DynamicResource MainColorBrush}" Margin="0,0,0,5" ToolTip="当前选择的项" Height="16"  />
                    <TextBlock  Grid.Column="2" Text="/"  HorizontalAlignment="Right"     VerticalAlignment="Center" TextAlignment="Right" Foreground="{DynamicResource MainColorBrush}" Margin="0,4,0,5" Width="10" Grid.ColumnSpan="2" Height="16"   />
                    <TextBlock x:Name="txtCount" Grid.Column="4" Text="{Binding Items.Count, ElementName=mylistbox}"  TextAlignment="Right" Foreground="{DynamicResource MainColorBrush}" Margin="0,0,0,5" ToolTip="项目总数" Height="16" VerticalAlignment="Bottom"/>

                </Grid>

            </Border>

            <TextBlock x:Name="LrcTextBlock" Visibility="Collapsed" Margin="22,3,315,0" Grid.ColumnSpan="2"   TextAlignment="Left"  Height="30" VerticalAlignment="Top"   TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"  Foreground="{DynamicResource MainColorBrush}" FontSize="16" >
                <TextBlock.Effect>
                    <DropShadowEffect ShadowDepth="2" Color="{DynamicResource {x:Static SystemColors.GrayTextColorKey}}" BlurRadius="6" Opacity="0.6" />
                </TextBlock.Effect>
            </TextBlock>

            <TextBox Name="SearchTextBox" Template="{StaticResource SearchTextBoxControlTemplate}" Height="22" Foreground="{DynamicResource MainColorBrush }" TextElement.FontWeight="Bold" FontSize="14" VerticalContentAlignment="Center" TextWrapping="NoWrap" Margin="0,4,136,0" VerticalAlignment="Top" Grid.Column="1" HorizontalAlignment="Right" Width="162" SelectionBrush="#FFFCFEFF" CaretBrush="{DynamicResource MainColorBrush}"  />

            <MediaElement x:Name="MusicPlayer" MediaOpened="MusicPlayer_MediaOpened" d:IsHidden="True"  MediaEnded="MusicPlayer_MediaEnded" LoadedBehavior="Manual"  Volume="0.3" Height="0" VerticalAlignment="Top"/>


            <local:LrcPanel x:Name="m_LrcPanel" Margin="8,33,2,17"  >

            </local:LrcPanel>

            <Image Name="MusicImage"  Margin="22,31,22,10"   Source="Default_MusciImage.png"   Stretch="Uniform" >
                <Image.Effect>
                    <DropShadowEffect Color="{DynamicResource {x:Static SystemColors.GrayTextColorKey} }" ShadowDepth="7" BlurRadius="8" Opacity="0.8"/>
                </Image.Effect>
            </Image>

            <Grid Name="InfoGrid" Margin="10,0,10,10"   MinWidth="200" MaxHeight="200" MinHeight="200" Grid.Row="1" Grid.RowSpan="1" >

                <Grid x:Name="MusicDetailTooltip" DataContext="{Binding ElementName=mylistbox, Path=SelectedItem }" TextBlock.Foreground="{DynamicResource MainColorBrush }"  TextBlock.FontSize="13"   >

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition  />
                    </Grid.RowDefinitions>
                    <TextBlock  Text="{Binding MusicTitle, FallbackValue=我的音乐我做主}" FontWeight="Bold" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text }"  FontSize="15" TextAlignment="Center" VerticalAlignment="Center"   Grid.ColumnSpan="2"   Margin="0"  >
                        <TextBlock.Effect>
                            <DropShadowEffect BlurRadius="6" Opacity="0.8" ShadowDepth="2"/>
                        </TextBlock.Effect>
                    </TextBlock>

                    <TextBlock Text="歌手：" Grid.Row="1"     Style="{StaticResource  MainSongInfoGrid1 }"/>
                    <TextBlock   Grid.Row="1" Grid.Column ="1"  Style="{StaticResource MainSongInfoGrid2 }" ToolTip="查询该歌手所有歌曲" HorizontalAlignment="Left" >
                        <Hyperlink Click="HyperlinkSongerSearch_Click" Foreground="{DynamicResource MainColorBrush}">
                             <Run Text="{Binding MusicAuthors}"></Run>
                         </Hyperlink>
                    </TextBlock>
                    <TextBlock Text="时长：" Grid.Row="2"     Style="{StaticResource MainSongInfoGrid1}"/>
                    <TextBlock Text="{Binding MusicLength }"   Grid.Row="2" Grid.Column ="1"  Style="{StaticResource MainSongInfoGrid2}" />
                    <TextBlock Text="专辑：" Grid.Row="3"    Style="{StaticResource MainSongInfoGrid1}"/>
                    <TextBlock Text="{Binding MusicAlbum}"   Grid.Row="3" Grid.Column ="1"   Style="{StaticResource MainSongInfoGrid2}"/>
                    <TextBlock Text="年代：" Grid.Row="4"    Style="{StaticResource MainSongInfoGrid1}"/>
                    <TextBlock Text="{Binding MusicYear}"    Grid.Row="4"  Grid.Column ="1"    Style="{StaticResource MainSongInfoGrid2}"/>
                    <TextBlock Text="风格：" Grid.Row="5"    Style="{StaticResource MainSongInfoGrid1}"/>
                    <TextBlock Text="{Binding MusicGenre}"   Grid.Row="5" Grid.Column ="1"   Style="{StaticResource MainSongInfoGrid2}"/>
                    <TextBlock Text="文件大小：" Grid.Row="6" Style="{StaticResource MainSongInfoGrid1}"/>
                    <TextBlock Text="{Binding MusicSize}"    Grid.Row="6"  Grid.Column ="1"   Style="{StaticResource MainSongInfoGrid2}"/>
                    <TextBlock Text="文件位置："  Grid.Row="7" Style="{StaticResource MainSongInfoGrid1}" />
                    <TextBlock Name="Info_SongLoc"  HorizontalAlignment="Left"  ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text }"  Grid.Row="7" Grid.Column ="1" TextAlignment="Left"  TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"   Style="{StaticResource MainSongInfoGrid2}" Margin="0,5">
                         <Hyperlink Click="MenuItemMusicLocation_Click" Foreground="{DynamicResource MainColorBrush}">
                             <Run  Text="{Binding MusicLoc}"></Run>
                         </Hyperlink>
                    </TextBlock>

                </Grid>

            </Grid>

            <!-- 下方播放放按钮和进度条 -->
            <Grid Grid.Row="2" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>

                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="80"/>
                    <ColumnDefinition Width="40"/>

                </Grid.ColumnDefinitions>
                <Border Margin="1,1,1,1" Background="Transparent" MouseLeftButtonDown="resizeGrip_MouseLeftButtonDown">
                    <Image Name="SmallMusicImage"    Source="{Binding ElementName=MusicImage, Path=Source}" Margin="1,1,1,2"/>
                    <Border.Effect>
                        <DropShadowEffect Color="{DynamicResource {x:Static SystemColors.GrayTextColorKey} }" ShadowDepth="7" BlurRadius="8" Opacity="0.8"/>
                    </Border.Effect>
                </Border>

                <Grid Grid.Column="1" Margin="5,0,0,0" MouseDown="playingitem_MouseDown" Background="Transparent" >
                    <Grid.Effect>
                        <DropShadowEffect Color="{DynamicResource {x:Static SystemColors.GrayTextColorKey} }" ShadowDepth="7" BlurRadius="8" Opacity="0.8"/>
                    </Grid.Effect>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Name="textTitle" Text="我的音乐我做主" ToolTip="{Binding ElementName=textTitle, Path=Text}"  VerticalAlignment="Center" FontSize="14" Foreground="{DynamicResource MainColorBrush}" Margin="5,5,0,0" TextTrimming="CharacterEllipsis"/>
                    <TextBlock Name="textSonger" Text="我爱霉霉" ToolTip="{Binding ElementName=textSonger, Path=Text}" Grid.Row="1" FontSize="13" VerticalAlignment="Center" Foreground="{DynamicResource MainColorBrush}" Margin="5,0,0,7"/>

                </Grid>

                <Grid  Margin="0" Grid.Column="2">
                    <Ellipse Stroke="{DynamicResource MainColorBrush}" Opacity="0.3" StrokeThickness="3" Margin="7" >
                        <Ellipse.Effect>
                            <DropShadowEffect Color="{DynamicResource MainColor}" ShadowDepth="0" BlurRadius="10" />
                        </Ellipse.Effect>
                    </Ellipse>
                    <Ellipse Name="circleprogress" Margin="7"  StrokeThickness="3"  Stroke="{DynamicResource MainColorBrush}"  StrokeDashOffset="0.1" StrokeDashArray="0,1000" RenderTransformOrigin="0.5,0.5">
                        <Ellipse.RenderTransform>
                            <TransformGroup>
                                <RotateTransform Angle="-90"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Ellipse.RenderTransform>
                        <Ellipse.Effect>
                            <DropShadowEffect Color="{DynamicResource MainColor}" ShadowDepth="0" BlurRadius="10" />
                        </Ellipse.Effect>
                    </Ellipse>

                    <ToggleButton Name="BottomPlayBtn" Style="{StaticResource playbtnBottom}" Click="MusicPlayButton_Click" >
                    </ToggleButton>
                </Grid>

                <Canvas Name="canvas_SkipTime" Grid.Column="3" Visibility="Collapsed">
                    <TextBlock Name="textblock_SkipTime" Width="auto" Height="15" Grid.Column="2" VerticalAlignment="Top" Canvas.Left="0" Canvas.Top="2" TextAlignment="Center" Text="01:30" Foreground="{DynamicResource MainColorBrush }" FontWeight="Bold"></TextBlock>
                </Canvas>

                <Slider Name="sliderProgress" Grid.Column="3" VerticalAlignment="Center" Margin="10,21.8,10,18"  ValueChanged="sliderProgress_ValueChanged" AutoToolTipPlacement="None" Cursor="Hand"   MouseMove="sliderProgress_MouseMove" MouseEnter="sliderProgress_MouseEnter" MouseLeave="sliderProgress_MouseLeave" Height="20"/>


                <TextBlock Name="textMusicPos"   Margin="5,20" Grid.Column="4" Text="0:00 / 0:00" Foreground="{ DynamicResource MainColorBrush }"  VerticalAlignment="Center" FontSize="14" FontFamily="Yu Gothic UI Semibold"  >
                    <TextBlock.Effect>
                        <DropShadowEffect Color="{DynamicResource MainColor}" ShadowDepth="0" Opacity="0.6" BlurRadius="10" />
                    </TextBlock.Effect>
                </TextBlock>



            </Grid>

            <ResizeGrip x:Name="resizeGrip" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Right" Height="17"  VerticalAlignment="Bottom" Width="17" Cursor="SizeAll" ToolTip="拖动窗体" />


        </Grid>

    </Grid>


</Window>
